syntax = "proto3";

import "org/seekers/game/vector2d.proto";
import "org/seekers/game/camp.proto";
import "org/seekers/game/goal.proto";
import "org/seekers/game/player.proto";
import "org/seekers/game/seeker.proto";
option java_multiple_files = true;
option optimize_for = SPEED;
option java_package = "org.seekers.grpc.net";
option java_outer_classname = "SeekersProto";

service Seekers {
	rpc Join (JoinRequest) returns (JoinResponse);

	rpc Properties (Empty) returns (PropertiesResponse);

	rpc Status (StatusRequest) returns (StatusResponse);

	rpc Command (CommandRequest) returns (Empty);

	rpc Update (CommandRequest) returns (StatusResponse);

	rpc Ping (Empty) returns (Empty);
}

message PropertiesResponse {
	 map < string, string > entries = 1;
}

message StatusRequest {
	// Authentication.
	string token = 1;
}

message StatusResponse {
	repeated Player players = 1;
	repeated Camp camps = 2;
	repeated Seeker seekers = 3;
	repeated Goal goals = 4;

	// Number of ticks passed since the game started.
	double passed_playtime = 5;
}

message Command {
	// ID of the seeker for which the command is intended.
	string seeker_id = 2;

	Vector2D target = 3;
	double magnet = 4;
}

message CommandRequest {
	// Token used for authorization purposes.
	string token = 1;

	// List of commands to be executed.
	repeated Command commands = 2;
}

message JoinRequest {
	// Map of additional details required for joining the game.
	// 'name': team name (e.g. "BestTeamName#123$@Å›")
	// 'color': web color (e.g "0xFFFFFF")
	map < string, string > details = 2;
}

message JoinResponse {
	// Authorization.
	string token = 1;

	// The ID assigned to the player upon joining.
	string player_id = 2;
}

message PingResponse {
	// Unix timestamp in milliseconds of the time the Ping request was received.
	float timestamp_ms = 1;
}

message Empty {}
